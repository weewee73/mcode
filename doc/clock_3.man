CLOCK(3)                   Linux Programmer's Manual                  CLOCK(3)



NAME
       clock - Determine processor time

SYNOPSIS
       #include <time.h>

       clock_t clock(void);

DESCRIPTION
       The clock() function returns an approximation of processor time used by the program.

RETURN VALUE
       The value returned is the CPU time used so far as a clock_t; to get the number of seconds used, divide by CLOCKS_PER_SEC.
       If the processor time used is not available or its value cannot be represented, the function returns the value (clock_t) -1.

CONFORMING TO
       C89,  C99,  POSIX.1-2001.
       POSIX requires that CLOCKS_PER_SEC equals 1000000 independent of the actual resolution.

NOTES
       The C standard allows for arbitrary values at the start of the program;
       subtract the value returned from a call to clock() at the start of the program to get maximum portability.

       Note that the time can wrap around.
       On a 32-bit system where CLOCKS_PER_SEC equals 1000000 this function will return the same value approximately every 72 minutes.

       On several other implementations, the value returned by clock() also includes the times of any children
           whose status has been collected via wait(2) (or another wait-type call).
       Linux does not include the times of waited-for children in the value returned by clock().
       The times(2) function, which explicitly returns (separate) information about the caller and its children, may be preferable.

SEE ALSO
       clock_gettime(2), getrusage(2), times(2)

COLOPHON
       This page is part of release 3.22 of the Linux man-pages project.
       A description of the project, and information about reporting bugs, can be found at http://www.kernel.org/doc/man-pages/.



GNU                               2008-08-28                          CLOCK(3)
