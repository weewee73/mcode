When you Include a module into your class as shown below, 
it’s as if you took the code defined within the module and inserted it within the class, where you ‘include’ it. 

It allows the ‘mixin’ behavior. It’s used to DRY up your code to avoid duplication, for instance, if there were multiple classes that would need the same code within the module.

The following assumes that the module Log and class TestClass are defined in the same .rb file. If they were in separate files, then ‘load’ or ‘require’ must be used to let the class know about the module you’ve defined.




The require method does what include does in most other programming languages: 
run another file. 
It also tracks what you've required in the past and won't require the same file twice. 
To run another file without this added functionality, you can use the load method.

The include method takes all the methods from another module and includes them into the current module. 
This is a language-level thing as opposed to a file-level thing as with require. 
The include method is the primary way to "extend" classes with other modules (usually referred to as mix-ins). 
For example, if your class defines the method "each", you can include the mixin module Enumerable and it can act as a collection. 
This can be confusing as the include verb is used very differently in other languages.



sudo bash -c 'for MSF in $(ls msf*); do ln -s /opt/metasploit-framework/$MSF /usr/local/bin/$MSF;done'
sudo ln -s /opt/metasploit-framework/armitage /usr/local/bin/armitage



大道理人人懂，小情绪难自控。

svn export exploit /xxx


PATH=/sbin:/usr/sbin:/bin:/usr/bin
PATH=$PATH:/log/.debug/mips/bin


git archive master --format=tar -o xxx.tar

You can try --enable-wide-getaddrinfo.
http://bugs.ruby-lang.org/issues/7856

世界清静啦！
make it run , others, others... not care.
make it run, others don't care......

 sqlite3 yyyy.db "select distinct name from expolit_options asc;"
	 update expolit_options set type='password' where name like '%password'; 
	 update expolit_options set type='select' where option = "targets"; 
	 update expolit_options set type='radio' where current_setting = "false" or current_setting = "true"; 



	 update expolit_options set type='select' where name = "SSLVersion";
	 update expolit_options set type='file' where name = "SSLCert";

	create index db2.exploit on exploit_options (detail_id);

su - postgres
createuser username -P

http://guides.rubygems.org

http://manuel.manuelles.nl/blog/2012/01/18/convert-postgresql-to-sqlite/


/opt/metasploit/postgresql/bin/psql  -h localhost -p 7337 -U msf3   

/opt/metasploit/postgresql/bin/psql  -h localhost -p 7337 -U msf3 -c "\d" >table.log

/opt/metasploit/postgresql/bin/pg_dump -h localhost -p 7337 -U msf3 -W msf3 >msf3.db

/opt/metasploit/postgresql/bin/pg_dump --data-only --inserts  -h localhost -p 7337 -U msf3 -W msf3 >msf3.sql
sed '/^SET/d' msf3.sql | sed '/pg_catalog.setval/d' | sed 's/true/'\'t\''/g' | sed 's/false/'\'f\''/g' >sed.msf3.sql
sed '/^SET/d' msf3.sql | sed '/pg_catalog.setval/d' | sed 's/true\([,)]\)/'\'t\''\1/g' | sed 's/false\([,)]\)/'\'f\''\1/g' >sed.msf3.sql

/opt/metasploit/postgresql/bin/pg_dump  --schema-only  -h localhost -p 7337 -U msf3 -W msf3 >msf3create.sql
sed -n '/CREATE TABLE/,/);/p' msf3create.sql >sed.msf3create.sql


/opt/metasploit/postgresql/scripts/ctl.sh start

psql -h localhost -p 7337 -U msf3

>>db_connect -y /opt/metasploit/apps/pro/ui/config/database.yml
>>workspace -a myworkspace
>>db_status

/opt/metasploit/apps/pro/ui/config/database.yml
development:
  adapter: "postgresql"
  database: "msf3"
  username: "msf3"
  password: "ee919fbb"
  port: 7337
  host: "localhost"
  pool: 256
  timeout: 5

production:
  adapter: "postgresql"
  database: "msf3"
  username: "msf3"
  password: "ee919fbb"
  port: 7337
  host: "localhost"
  pool: 256
  timeout: 5

2 4 6 5    4 2 4 3    2 7 2 6    5 7 6 5
4 2 3 1    2 4 6 6    7 5 6 4    2 2 2 1

gem unpack json-1.7.7.gem

ruby user's guide
http://www.rubyist.net


交叉编译MIPS平台的ncurses-5.9的代码的时候，会在执行tic时挂死。
通过ncurses-5.9源代码编译主机上的版本并安装



http://guides.rubygems.org/

http://tldp.org/HOWTO/Program-Library-HOWTO/index.html


cross-platform versions packages
https://github.com/luislavena/rake-compiler/wiki/Projects-using-rake-compiler

val=`IFS="$PATH_SEPARATOR"
for dir in $withval; do
echo x ${LIBPATHFLAG} ${RPATHFLAG} |
sed -E 's/^x *//;s'"${PATH_SEPARATOR}"'%1\\$-s|%s'"${IFS}${dir}/lib${IFS}g"
done | tr '\012' ' '`

IFS="$PATH_SEPARATOR"
for dir in $withval; 
do
	echo x ${LIBPATHFLAG} ${RPATHFLAG} |
	sed -E 's/^x *//;s		'"${PATH_SEPARATOR}"'	 %1\\$-s|%s				'"${IFS}${dir}/lib${IFS}g"
	sed -E 's/^x *//;s'     "${PATH_SEPARATOR}"     '%1\\$-s|%s'           "${IFS}${dir}/lib${IFS}g"
done | tr '\012' ' '
sed -E 's/^x *//;s'"${PATH_SEPARATOR}"'%1\\$-s|%s'"${IFS}${dir}/lib${IFS}g"


++ IFS=:
++ for dir in '$withval'
++ tr '\012' ' '
++ echo x ' -L%1$-s' ' -Wl,-R%1$-s'

----------------------------------------------------------------------
Libraries have been installed in: 

If you ever happen to want to link against installed libraries in a given directory, LIBDIR, 
you must 
	either 
		use libtool, and specify the full pathname of the library, 
	or  
		use the `-LLIBDIR' flag during linking and do at least one of the following:
			- add LIBDIR to the `LD_LIBRARY_PATH' environment variable during execution
			- add LIBDIR to the `LD_RUN_PATH' environment variable during linking
			- use the `-Wl,-rpath -Wl,LIBDIR' linker flag
			- have your system administrator add LIBDIR to `/etc/ld.so.conf'

See any operating system documentation about shared libraries for 
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------



ruby extconf.rb
make
make install

gem install rake -v 10.1.0



LD_LIBRARY_PATH

$ wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz
$ tar xzvf yaml-0.1.4.tar.gz
$ cd yaml-0.1.4
$ ./configure --prefix=/usr/local
$ make
$ make install

$ wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p0.tar.gz
$ tar xzvf ruby-1.9.3-p0.tar.gz
$ cd ruby-1.9.3-p0
$ ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib
$ make
$ make install


Adding "# encoding: ascii" at the top of the /usr/local/lib/ruby/gems/2.0.0/gems/packetfu-1.1.8/lib/packetfu/protos/lldp.rb
gem install pcaprub -- --with-opt-dir=/home/git/metasploit-framework/libpcap
gem install pg -- --with-pgsql-lib=/home/git/metasploit-framework/postgresql/lib --with-pg-config=/home/git/metasploit-framework/postgresql/bin/pg_config  

gem install bundler && bundle install

Using rake (10.0.4) 
Using i18n (0.6.1) 
Using multi_json (1.0.4) 
Using activesupport (3.2.13) 
Using builder (3.0.4) 
Using activemodel (3.2.13) 
Using arel (3.0.2) 
Using tzinfo (0.3.37) 
Using activerecord (3.2.13) 
Using metaclass (0.0.1) 
Using mocha (0.13.3) 
Using bourne (1.4.0) 
Using database_cleaner (0.9.1) 
Using diff-lcs (1.2.2) 
Using factory_girl (4.2.0) 
Using json (1.7.7) 
Using pg (0.15.1) 
Using metasploit_data_models (0.16.1) 
Using msgpack (0.5.4) 
Using nokogiri (1.5.9) 
Using packetfu (1.1.8) 
Using pcaprub (0.11.3) 
Using redcarpet (2.2.2) 
Using robots (0.10.1) 
Using rspec-core (2.13.1) 
Using rspec-expectations (2.13.0) 
Using rspec-mocks (2.13.0) 
Using rspec (2.13.0) 
Using shoulda-matchers (1.5.2) 
Using simplecov-html (0.5.3) 
Using simplecov (0.5.4) 
Using timecop (0.6.1) 
Using yard (0.8.5.2) 
Using bundler (1.3.5) 



当你决定出发，最大的困难已不复存在

两眼一抹黑，就直接上了，真是跟上学的时候差不多
两眼一睁 忙到灯熄
急生智，穷生变
轻财足以聚人，律己足以服人，量宽足以得人，身先足以率人



Linus Torvalds
<<Just for Fun>>

http://www.pentest-standard.org

那没什么大不了的

人的一切痛苦,本质上都是对自己的无能的愤怒。王小波

每一句廉价的我爱你背后都藏着一句Fuck you？而昂贵的我爱你背后只藏着一句Follow me。

时间，让深的东西越来越深，让浅的东西越来越浅。

既往不恋 当下不杂 未来不迎

狂霸帅气屌炸天

嗜睡的季节

ABCDEFG 
A boy can do everything for girl
HIJK
He is just kidding
LMNOP
Love must need our patience


Girl Meets Boys
http://moho.in/thread-1457-1-1.html

世界是美好,还是罪恶.那是个人对它的看法，而它只是呈现出内容来。
你的愚蠢总是那么富有创造力。
不能因为我俩有过节，你就把我当节过。
我这人不懂音乐，所以时而不靠谱，时而不着调。
给我一张你的靓照呗，回家辟邪用。
作为失败的典型，你真的太成功了！
你一出门，千山鸟飞绝，万径人踪灭。
好久没有人把牛皮吹得这么清新脱俗了。
年轻算什么？谁没年轻过？你老过吗？真是的。
脑袋空不要紧，关键不要进水。
人家有的是背景，而我有的只是背影。
完了，你也不理我了，我成狗不理了。
将薪比薪想一想，算了，不活了。

http://www.offensive-security.com/metasploit-unleashed/Exploits

http://code.taobao.org/svn/tinixdev/trunk

git clone https://github.com/zeroflyfire/mcode.git
git config user.email "zero.flyfire@gmail.com"
git config user.name "flyfire"
git push origin master
git branch
git branch -r
git diff origin/master
git fetch origin
git merge origin/master
git rebase origin/master
git reset --hard HEAD~1
git stash
git stash clear
git stash list
git stash pop
git config credential.helper cache
git config remote.origin.url git@github.com:zeroflyfire/mcode.git
git diff --stat --staged origin
git checkout -- Makefile
vidcontrol -i mode
vim /etc/rc.conf

printf("%*s %s\n", i, buf); //动态宽度或精度

dd if=/dev/zero of=xxx bs=1K count=1000 生成大文件

lzip -cd gmp-5.1.3.tar.lz | tar -xf -

Asterisk — *
At — @
Colon — :
Comma — ,
Curly Braces — { }
Dot — .
Exclamation Point — !
Parentheses — ( )
Percent — %
Plus — +
Semicolon — ;
Single Quotes — ' '
Space Character
Slash and Backslash — / \
Square Brackets — [ ]
Tilde — ~


let @b=:tabnew<0d>iHello World<1b>
:tabnewiHello World

vim -u NONE

http://learnvimscriptthehardway.stevelosh.com/
http://www.vimperator.org/
https://github.com/shawncplus/dotfiles/blob/master/.vim/startup/mappings.vim
https://github.com/shawncplus/dotfiles/tree/master/.vim/bundle
https://github.com/vim-scripts
http://vim-scripts.org/vim/scripts.html
https://github.com/gmarik/Vundle.vim


git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
git submodule

ubuntu
gconftool --set --type=string /apps/gnome-terminal/profiles/Default/encodingUTF-8
~/.gconf/apps/gnome-terminal/profiles/Default/%gconf.xml

Monospace

tmux
<Ctrl-b>%       Split the current pane into two, left and right.
<Ctrl-b>"       Split the current pane into two, top and bottom.

<Ctrl-b>;       Move to the previously active pane.
<Ctrl-b>o       Select the next pane in the current window.
           C-Up, C-Down
           C-Left, C-Right
                       Resize the current pane in steps of one cell.
           M-Up, M-Down
           M-Left, M-Right
                       Resize the current pane in steps of five cells.

<Ctrl-b>C-o     Rotate the panes in the current window forwards.
<Ctrl-b>{       Swap the current pane with the previous pane.
<Ctrl-b>}       Swap the current pane with the next pane.

<Ctrl-b>x       Kill the current pane.


<Ctrl-b>#       List all paste buffers.
<Ctrl-b>=       Choose which buffer to paste interactively from a list.
<Ctrl-b>[       Enter copy mode to copy text or view the history.
<Ctrl-b>]       Paste the most recently copied buffer of text.
    vi:
    Start selection              Space
    Copy selection               Enter
    Clear selection              Escape
    Delete/Copy to end of line   D

<ctrl-b>s           Select a new session for the attached client interactively.
<Ctrl-b>d           Detach the current client.
<Ctrl-b>$           Rename the current session.
tmux ls             List all sessions managed by the server.
tmux new -s session-name
tmux attach -t session-name                
tmux detach

Windows
<Ctrl-b>w       list windows
<Ctrl-b>c       create a new window
<Ctrl-b>,       rename the current window
<Ctrl-b>i       Display some information about the current window.
<Ctrl-b>n       change to the next window
<Ctrl-b>p       change to the previous window
<Ctrl-b>0-9     select windows 0 through 9



<Ctrl-b>t       Show the time.


vimperator
gi              Focus last used input field. If there is no last input field, it focuses the first input field. 
;{mode}{empty}{hint}
    Start an extended hint mode.
    ExtendedHint mode is useful for performing operations on hinted elements other than the default left mouse click.
    For example, you can yank link locations, open them in a new window or save images.
    If you want to yank the location of hint 24, press ;y to start this hint mode.
    Then press 24 to copy the hint location.

    {mode} can be one of:
        ;;  to focus an element
        ;?  to show information about an element (incomplete)
        ;s  to save a link's destination
        ;S  to save a media object
        ;a  to save a link's destination (prompting for save location)
        ;A  to save a media object (prompting for save location)
        ;f  to focus a frame
        ;o  to open its location in the current tab
        ;t  to open its location in a new tab
        ;b  to open its location in a new background tab
        ;w  to open its destination in a new window
        ;F  to follow a sequence of <CR>-delimited hints in background tabs
        ;O  to generate an :open with hint's URL (like O)
        ;T  to generate a :tabopen with hint's URL (like T)
        ;W  to generate a :winopen with hint's URL
        ;v  to view its destination source
        ;V  to view its destination source in the external editor
        ;y  to yank its destination location
        ;Y  to yank its text description
        ;c  to open its context menu
        ;i  to open a media object
        ;I  to open a media object in a new tab
        ;x  to display an element's title text, or alt text if none.
git
     .gitignore
     .git/info/exclude
     .git/config  [core] -> excludesfile = 

http://ftp.gnu.org/gnu/coreutils/coreutils-8.22.tar.xz
http://www.gnu.org/manual/manual.html

http://www.gnu.org/software/bash/manual/

http://www.gnu.org/software/coreutils/manual/
http://www.gnu.org/software/grep/manual/
http://www.gnu.org/software/gawk/manual/
http://www.gnu.org/software/sed/manual/
http://www.gnu.org/software/findutils/manual/find.html

http://www.gnu.org/software/gnu-c-manual/gnu-c-manual.html
http://www.gnu.org/software/gnulib/manual/
http://www.gnu.org/software/libc/manual/

http://www.gnu.org/software/gcc/
http://www.gnu.org/software/make/manual/
http://www.gnu.org/software/gdb/documentation/

http://www.gnu.org/software/autoconf/manual/
http://www.gnu.org/software/automake/manual/

http://www.gnu.org/software/autogen/manual/


https://www.kernel.org/doc/

Happy Hacking Keyboard
