# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# General definitions
alias grep='grep --color=auto'
alias lt='ls -Altr'

random()
{
    X=${1:-100}
    N=${2:-10}
    while [ "$N" -gt 0 ]
    do
        echo -ne "$[RANDOM%X+1] "
        N=$[N-1]
    done
    echo
}
calc() { echo "$*" | bc -l; }
max() { [ "$1" -gt "$2" ] && { echo $1; } || { echo $2; }; }
mtail() { tail -n +"$2" $1 | head -n $3; }
mcount() { grep -o "$1" $2 | sort -n | uniq -c | sort -nr; }
mfind_ch() { grep $@ `find . -name "*.[ch]"`; }
cp936_to_utf8() { iconv -f cp936 -t utf8 -o $1.tmp $1 && mv -i $1 $1.original && mv -i $1.tmp $1; }
utf8_to_cp936() { iconv -t cp936 -f utf8 -o $1.tmp $1 && mv -i $1 $1.original && mv -i $1.tmp $1; }
value_to_hex() { local value=$1; if [ -z "$value" ]; then read value; fi; printf "0x%x\n" $(($value)); }
value_to_oct() { local value=$1; if [ -z "$value" ]; then read value; fi; printf "0%o\n"  $(($value)); }
value_to_dec() { local value=$1; if [ -z "$value" ]; then read value; fi; echo $(($value)); }
value_to_bin() { local value=$1; if [ -z "$value" ]; then read value; fi; echo "obase=2;ibase=10;$(($value))" | bc; }
bin_to_value() { local value=$1; if [ -z "$value" ]; then read value; fi; echo "obase=10;ibase=2;$value" | bc; }

# User specific aliases and functions
#export LANG=zh_CN.UTF-8
export LANG="en_US.UTF-8"
export LC_CTYPE="zh_CN.UTF-8"
export EDITOR="vim"
WORKSPACE="$HOME/github"

alias vi='vim'
alias mnote='vim -c start $WORKSPACE/mcode/journal/note.log'
alias mtask='vim -c start $WORKSPACE/mcode/journal/task.log'
alias mshell='vim + $WORKSPACE/mcode/journal/shell.log'
alias ashell='echo >>$WORKSPACE/mcode/journal/shell.log'
alias mvim='vim + $WORKSPACE/mcode/journal/vim.log'
alias mquestion='vim -c start $WORKSPACE/mcode/journal/question.log'
alias man='$WORKSPACE/mcode/shell/mman.sh'
alias project_init='$WORKSPACE/mcode/shell/project_init.sh'

mcode="$WORKSPACE/mcode"
source ${mcode}/shell/git-completion.bash

PROMPT_COMMAND='$HOME/github/mcode/shell/mword.sh'

# PROMPT_COMMAND=
# echo -ne "\033]0;CODEING\007"


# Workplace definitions
if [ -f $HOME/.workrc ]; then
	. $HOME/.workrc
fi

